#!/usr/bin/env python3

FCFLAGS = {}
FCFLAGS['GFORTRAN'] = '-Wall -Wextra -Wimplicit-interface -fimplicit-none -fPIC'.split()
FCFLAGS['GFORTRAN_debug'] = '-O0 -fmax-errors=1 -g -fcheck=all -fbacktrace'.split()
FCFLAGS['GFORTRAN_release'] = '-O2'.split()
FCFLAGS['IFORT'] = '-warn all -implicitnone -fpic'.split()
FCFLAGS['IFORT_debug'] = '-check all'.split()
FCFLAGS['IFORT_release'] = '-fast'.split()


def options(opt):
    opt.load('compiler_c')
    opt.load('compiler_fc')


def configure(conf):
    conf.load('compiler_c')
    conf.load('compiler_fc')

    conf.check_fortran()

    # Base FCFLAGS (enable all warnings)
    conf.env.FCFLAGS = FCFLAGS.get(conf.env.FC_NAME, [])

    # Environment so far
    env = conf.env

    # Set up debug flags (check everything, don't optimise)
    conf.setenv('debug', env)
    conf.env.FCFLAGS = env.FCFLAGS + FCFLAGS.get(conf.env.FC_NAME + '_debug', [])

    # Set up release flags (check nothing, optimise)
    conf.setenv('release', env)
    conf.env.FCFLAGS = env.FCFLAGS + FCFLAGS.get(conf.env.FC_NAME + '_release', [])


def build(bld):
    if(not bld.variant):
        bld.fatal("No build variant (release/debug) chosen! See help (./waf --help).")

    bld(features='fc',
        source=bld.path.ant_glob('src/*_ml.F90'),
        target='do3se_modules')

    bld(features='fc fcshlib',
        target='do3se',
        use='do3se_modules')

    bld(features='fc fcprogram',
        source='src/DO3SE_main.F90',
        target='run_do3se',
        use='do3se_modules')


# create build variants
from waflib.Build import BuildContext, CleanContext, InstallContext, UninstallContext
for bldvariant in "debug release".split():
    for ctx in (BuildContext, CleanContext, InstallContext, UninstallContext):
        name = ctx.__name__.replace("Context", "").lower()
        class tmp(ctx):
            cmd = name + "_" + bldvariant
            variant = bldvariant
