
# --- compiler --------------------------------------

ifdef with_mpi
F2003 = mpif90 -D_MPI
LD    = mpif90
else
F2003 = gfortran
LD    = gfortran
endif

FFLAGS_DEFAULT    = -extend-source -fbacktrace -fdefault-real-8 \
  -ffixed-line-length-none -ffree-line-length-none -fno-range-check
FFLAGS_CHECK      = -check all -fpe0 -ftrapuv -Werror -Wunused-parameter
FFLAGS_OPTIM_NONE = -O0
FFLAGS_OPTIM_FAST = -O3

ifdef with_omp
FFLAGS_OPENMP  = -openmp
LDFLAGS_OPENMP = -openmp
endif

# * collect

ifeq "$(flags)" "optim"
FFLAGS  = $(FFLAGS_OPENMP) $(FFLAGS_DEFAULT) $(FFLAGS_OPTIM_FAST)
LDFLAGS = $(LDFLAGS_OPENMP)
else
ifeq "$(flags)" "check"
FFLAGS  = $(FFLAGS_OPENMP) $(FFLAGS_DEFAULT) $(FFLAGS_OPTIM_NONE) $(FFLAGS_CHECK)
LDFLAGS = $(LDFLAGS_OPENMP)
else
FFLAGS  = $(FFLAGS_OPENMP) $(FFLAGS_DEFAULT)
LDFLAGS = $(LDFLAGS_OPENMP)
endif
endif

# --- libs -------------------------------------------

# OpenMP extension:
ifdef with_omp
FFTW_OMP_LIBS =  -lfftw3_omp
endif
# MPI extension:
ifdef with_mpi
FFTW_MPI_LIBS =  -lfftw3_mpi
endif
# flags:
FFTW_ROOT = /usr
FFTW_INCS = -I$(FFTW_ROOT)/include
FFTW_LIBS = -L$(FFTW_ROOT)/lib $(FFTW_MPI_LIBS) $(FFTW_OMP_LIBS) -lfftw3

# netcdf4
NETCDF_INCS = $(shell nf-config --cflags)
NETCDF_LIBS = $(shell nf-config --flibs)

# OpenMPI
MPI_INCS = $(shell pkg-config --cflags-only-I ompi-f90)
MPI_LIBS =

# Math Kernel Library
MKL_ROOT = /sw/sdev/Modules/intelcomp/14.0.1/composer_xe_2013_sp1.1.106/mkl
MKL_ARCH = intel64
MKL_LP   = lp64
MKL_INCS = -I$(MKL_ROOT)/include/$(MKL_ARCH)/$(MKL_LP)
#MKL_LIBS = -DMKL -lmkl_rt
MKL_LIBS = -L$(MKL_ROOT)/lib/$(MKL_ARCH) \
       -lmkl_lapack95_${MKL_LP} -lmkl_blas95_${MKL_LP} \
       -lmkl_intel_${MKL_LP} -lmkl_sequential -lmkl_core

LAPACK_ROOT = /usr
LAPACK_INCS = -I$(LAPACK_ROOT)/include
LAPACK_LIBS = -L$(LAPACK_ROOT)/lib  -llapack -lblas
LAPACK_DEFS = -Dwith_lapack

# collect:
INCS = $(MPI_INCS) $(NETCDF_INCS) $(FFTW_INCS) $(LAPACK_INCS) $(LAPACK_DEFS)
LIBS = $(MPI_LIBS) $(NETCDF_LIBS) $(FFTW_LIBS) $(LAPACK_LIBS)
