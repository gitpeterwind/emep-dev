&esxDriver_config
!------------------

! esx_config sets/resets general run variables (See esx_Variables_ml)
! This file is written in pseudo-rst, to allow easy generation of pdf.
! See end of file for some restrictions

! Start:: 

 esx%exp_name = "an_sol_c0"
 esx%exp_name = "diffchem"
 esx%units       = "ppb"
 esx%year        = 2008
 !esx%daynumber   = 153 
 esx%startdate   = 2008 7 2 12 0   ! year mm dd hh seconds
 esx%endTime     =  7200.0
 esx%endTime     =   200.0
 esx%dt_extern   =  3600.0  ! Master time step, for e.g. met data change
 esx%dt_phychem  =    20.0  ! time step around chem/diffusion loops

! (the above variables can be ignored just now, except the exp_name which is a
!  useful way to label the particular settings. Results and log-files make use
!  of this label.)
!
! Some important options::

  esx%uses_chem = T         ! Calls chemistry routines
  esx%uses_diff = T         ! Calls diffusion routines
  esx%uses_veg  = T         ! Uses Veg stuff. Could be false, e.g. for an_sol_c tests
  esx%uses_externData  = F   ! Uses external data file for meteo (EsxInput_data.csv)
  esx%uses_plotting = F     ! Only possible if graphics scripts available, see below

!-----------------------------------------------------------------------------

!z-grid
!------

! Define the zbnd-grid, up to NZMAX_ESX (=200) values allowed. Can be fewer.
! (To get more modify the parameter NZMAX_ESX in esx_Variables.f90)
!
! NOTE - we define the boundaries (zbnd): Do not include groundlevel (zbnd=0)
! Code will calculate central z and other values
!
! Also, we have two choices. Levels can be set explicitly, see next lines, or 
! as linear spacing between limits, see 'linear' example below

!e.g.  esx%zbnd = 0.3, 1.0, 2.0, 3.0, 4.0, 6.0, 10.0, 20.0, 35.0, 50.0, 100.0, 200.0, 350.0, 600.0

!Bosco esx%zbnd = 2.0, 8.0, 16.0, 24.0, 32.0, 41.5

! Set method first::

 esx%zmethod = 'linear'
 esx%zmethod = 'explicit'

! An explicit example::

 !esx%zbnd = 0.5, 1.5, 2.5, 3.5, 4., 4.5, 5.0, 5.5, 6., 6.5, 7.0, 7.5, 8., 9. 10.
 esx%zbnd = 5., 10.,  15., 20., 32., 64., 100.,200.,300.
 esx%zbnd = 2., 4., 6., 8., 10., 12., 14., 16., 20., 30., 40., 50., 70., 100., 150., 200., 250., 300., 350., 400., 500., 600., 700., 800., 1000., 1200., 1500.

! the following are only used if zmethod set to linear::

 esx%zfirst  = 0.0
 esx%zlast   = 1500
 esx%nz      =  20 

! These zbnd values are the 'boundary'-levels of cells, the location where
! fluxes should be calculated. Given these, the code will calculate the cell
! 'mid' heights (esx%z, where concentrations are calculated), and layer
! thickness, etc.  (In future we might want to use functions to specify
! esx%zbnd. If wanted, the easiest solution now would be to reset esx%
! in esx_Variables.f90. We might implement some namelist method also
! in future.)

!-----------------------------------------------------------------------------
!
! DiffSpecs
! ---------
!
! Diffusing species. Species with very long or very short lifetimes can
! be excluded from the diffusion calculations, or we might just want to
! focus on a limited sub-set of reactions. Specify at least one species
! and more if necessary. Need to specify with name, and any loss/production
! terms, but zero is fine for the index. (esx will work that out later.)
!
! NOTE. Any loss production given here will be used on top of any explicit
! deposition or emission calculations, so be careful!::

 esx%DiffSpecs = 
   !species  ind  Vd   Ve  Fb  Ft
   'TRACER',   0, 0.02,0.0,0.0,0.0
   'O3',       0, 0.0,0.0,0.0,0.0
   'NO',       0, 0.0,0.0,0.0,0.0
   'NO2',      0, 0.0,0.0,0.0,0.0
   'NH3',      0, 0.02,0.0,1.0,0.0

!-----------------------------------------------------------------------------
!
! Diffusion time-step.
! --------------------
!
! Usually the code will calculate this with numerical stability considerations,
! but if uncommented here the code will take the minumum value of the user 
! provided value and the stability-dependent time::

   !esx%dt_Zdiff    = 0.01  ! Usually okay to let code calculate
   esx%dt_Zdiff    = 1.0   !  Juha-Pekka 2013-
   esx%dt_Zdiff    = 10.0   !  Faster ;-)
!
! Top boundary
! ------------
!
! We need to choose whether the top boundary has fixed concentrations or free
! (boundary and initial condition concentrations are set below, in the BIC section)

   esx%fixedBC = F

!-----------------------------------------------------------------------------
!
! Kz profiles 
! ------------

! The eddy diffusivity can be set in different ways, so use a flexible system
! with a method name (Kz_method) and parameters supplied as key-word arguments (Kz_kwargs)::

   esx%Kz_method = "constant"
   esx%Kz_kwargs = "const", 0.5

   esx%Kz_method = "power"
   esx%Kz_kwargs   = "za", 1.0, "Ka", 0.5, "n",  0.5 

  esx%Kz_method = "Leuning"
 ! No kwargs

! So far we have coded for methods:  constant, power or Leuning
! Note: With fortran's namelist system the last set of Kz_method, Kz_kwargs is
! chosen, so here we would get the constant Kz method with value 0.5.
!
!-----------------------------------------------------------------------------
!
! Output species.  
! ---------------

! Uses the same txt,num format as DiffSpecs above.
! (Remember - upper case)::

   esx%OutSpecs =
  'TRACER', 0
  'O3', 0
  !'NO', 0
  !'NO2', 0
  'NH3', 0
  'NH4_F', 0
  !'OH', 0
  !'HO2', 0
  !'RO2', 0

! OK to specify species which are not in use. Can also specify "All" (not implemented yet)
!
!-----------------------------------------------------------------------------
!
! Output times
! ------------

! Values will be printed out at these time in results tables, and if 
! wanted/possible plots will also be made.
! No default values, so specify time in seconds:
!
! CAREFUL:  for now, use times which are a multiple of the dt=10s from the 
! esx_tester program. (Will modify this in future)
! ::

 !esx%printTime = 0., 1., 2., 10., 20., 30., 40.0, 60.0, 120, 600.0, 2000.0 
 esx%printTime = 0., 100.0, 200.0, 1000.0, 2000.0

!-----------------------------------------------------------------------------
!
! Plotting 
! --------

! These lines are used to modify a system-call, where an external
! plotting script is called. This script reads the model output for the
! printTime as given above, and plots. The script uses matplotlib/pylab,
! the free python alternative to matlab graphics. This is readily availble
! on standard linux systems.  Of course, since this is a simple system
! call, any other script available to the user can be called. In future,
! the system-calls could be written in a list in the namelist, with ESX
! simply running which lines of code are specified.  !  ! Here we run a
! matplotlib script to plot the results as a function ! of time and z.
! Other scripts could also be run (e.g. matlab).  ! Set false (F) if not
! wanted, or possible.  
!
! Script can save files in many formats, just tell what you want, e.g.
! PlotFile.eps, Test2.jpg, etc.

! Options so far: zmax

! to send this plot to a  file we add the -o option::

!   !esx%plot_cmds = "D_Plotting/plotZarray.py --tfmt t=%5.1f --zmax 20 -c O3 -o TestO3.png"

! Here we plot O3, up to 100m::
! The esx_tester routine will add filename and component::

   esx%plot_cmds = "D_Plotting/plotZarray.py --tfmt t=%5.1f --zmax 100 --xlow 0"

!
!-----------------------------------------------------------------------------
!
! debugging
! ---------

! set 0 for none, 1 for light, 2 for extra::

 esx%debug_driver = 1     
 esx%debug_Zdiff = 1     
 esx%debug_Zchem = 0       ! 2 will also give namelist out, large
 esx%debug_Zmet  = 1       ! 2 will also give namelist out, large
 esx%debug_Zveg  = 0       !
 esx%debug_gleaf = 1       ! 

! Conductances
! -------------

! Can use Juha-Pekka's simple (gleaf0) or do3se.
! If gleaf_method do3se, need to specify gsto also.::

  esx%gsto_method = 'do3se'
  esx%gleaf_method = 'gleaf0'
  esx%gleaf_method = 'do3se'

! Local data config
! ------------------

! This "Loc" data (and Zmet etc) is assumed to be data which does not need
! to 'know' about ESX at all, and can be used to exchange variables between
! modules. For example, the EMEP model can provide these values, or data
! from local site measurements  can be used. The values will usually change
! with time, so will generally be modified from those given above. Still,
! the above values are needed for simple tests.

! (includes some surface meteo)::


 Loc%ustar = 0.5
 Loc%invL  = 0.0   ! neutral
 Loc%rh    = 0.4   ! near surface (2m) RH, fraction
 Loc%t2    = 305.0 ! near surface (2m) temp, K
 Loc%psurf = 1.0e5 ! surface pressure (Pa)
 Loc%Hmix  = 1000.0 ! height of mixing layer (m). We will derive hSL from this.

 !! Added 27 Aug
 !! Radiation terms. Usually these would be calculated in the model, but for testing
 !! values can be provided here. Rule is: if numebrs given here, these are used. If
 !! not, or numbers are negative (e.g. -999) then ESX will calculate.

 Loc%PARsun   = 400.00     ! W/m2
 Loc%PARshade = 100.00     ! W/m2

/

!============== END OF ESX CONFIG ===========================================-


!-----------------------------------------------------------------------------
!

&esxVeg_config
!---------------
!
! Veg_config sets/resets cover general vegetation characteristics, e.g. basic
! params such as height, max and min LAI, methods for dealing with SGS, etc::

  veg%name     = "Temperate/boreal deciduous"
  veg%code     = "DF"
  veg%hveg     = 20.0
  veg%dPerh    = 0.65   ! displacement height/hveg
  veg%LAI      =  5.0
  veg%gMax     =  0.02  ! max. conductance, m/s
  veg%alpha    =  0.1   !  light response
  veg%profile  =  "beta"
  veg%profile  =  "uniform"
  veg%canopy_bottom  =  0.1

! In-testing/future::
!
! !  veg%profile  =  "beta"
! !  veg%LAI_method  = "EMEP-latitude"
! !  veg%LAI_keys =  "max" "min" "DSGS"  "ESGS"
! !  veg%LAI_vals =    5.0  0.0    0.0    0.0   
! !  veg%NMLTESTS(1)=
! !     ABC, (/ 1.0, 2.0, 3.0, 4.0, 5.0 /)
! !  veg%LAI_params =  max 5.0  min 0.0 DSGS  0.0 ESGS 0.0

/



!
! -----------------------------------------------------------------------------

&chem_config 
!--------------

! Chemical boundary conditions (including emissions)
! --------------------------------------------------
!
!! chem_config sets boundary and initial conditions for chemical species
!!
!! Note on BIC. The same species can be specified for different k-values on
!! separate lines, e.g. for k=1 on one line, for k=2..9 on the next, etc.
!! More complex inputs are probably better done through the calling
!! fortran routines.
!! 
!! Units can be 'ppb', or '-' for unitless. If the latter, then the user may
!! need to think about the grid z values. For example, for a test with unit-
!! source in the lowest layer, we need a conc which is 1.0/dz = 0.5 for a 2m 
!! lowest grid. (cf an_sol_c0 in TestingRoutines)

!  (set z2 >> nz to ensure top of domain)
!  an_sol_c0   'conc', 'O3', 'units', 4.0e-11, 1, 1

!  the following is a very simplified set-up for tests, with fake emissions
!  for O3!
!  ::

  BIC =
   !type    spec unit    value  z1 z2
   ! JP test 2013-10-01 Unit conc in 1st layer, which is 5.0m:
   !'conc', 'O3', '-',    0.2, 1, 1
   !   'emis',  'O3', 'molec/cm2/s',   2.5e12, 1, 1
   !   !'conc', 'O3', '-',    2.0,   1, 1
   !
   'conc', 'TRACER', 'ppb',   40.0, 1, 999
   'conc', 'O3', 'ppb',   40.0, 1, 999
   'conc', 'NO', 'ppb',    2.5, 1, 1
   'conc', 'CO', 'ppb',  150.0, 1, 999
   'conc', 'SO4', 'ppb',   1.0, 1, 999
   'conc', 'NH3', 'ppb',  10.0, 1, 999
   'conc', 'HNO3', 'ppb',   5.0, 1, 999
/

!-----------------------------------------------------------------------------

&do3se_config
!-------------
! 
! method can be multiplicative or photosynthesis, needing different params

 conf%method = "multiplicative"
 conf%method = "photosynthesis"

! Multiplicative params
! ---------------------
! ::

 conf%gmax = 400
 conf%fmin = 0.1

 conf%f_phen_method = "simple day PLF"
 conf%f_phen_a = 0.0
 conf%f_phen_c = 1.0
 conf%f_phen_e = 0.0
 conf%f_phen_1 = 50
 conf%f_phen_4 = 30

 conf%leaf_f_phen_method = "simple day PLF"
 conf%leaf_f_phen_a = 0.0
 conf%leaf_f_phen_b = 1.0
 conf%leaf_f_phen_c = 0.0
 conf%leaf_f_phen_1 = 40
 conf%leaf_f_phen_2 = 80

 conf%f_lightfac = 0.006
 conf%cosA = 0.5

 conf%f_temp_method = "default"
 conf%T_min = 0
 conf%T_opt = 20
 conf%T_max = 35

 conf%f_VPD_method = "linear"
 conf%VPD_max = 0.1
 conf%VPD_min = 0.3


! Photosynthesis method
! ----------------------
!
! From Buker et al, 2007 for Beech::

 pn_conf%g_sto_0   = 0.03    ! mol/m2/s
 pn_conf%m         = 13.5    ! 
 pn_conf%V_cmax_25 =  30.0   ! 
 pn_conf%J_max_25  =  60.0   ! 

/

! This file
! ---------

! This config file is written so that it can be converted to restructured text
! with the simple removal of the "! " bits. Use spaces between stuff which needs
! to be separate though, and after lines, etc.
